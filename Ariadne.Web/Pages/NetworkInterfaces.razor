@page "/interfaces"
@using Ariadne.Core
@using Ariadne.Web.Components

@inject NetworkInterfaceDiscoveryService NetworkInterfaceDiscoveryService  
@inject NavigationManager NavigationManager

<h3>Network interfaces</h3>

@if (_networkInterfaces == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var networkInterface in _networkInterfaces)
        {
            <tr>
                <td>@networkInterface.Name 
                    @foreach (var ipaddress in networkInterface.IPv4Addresses)
                    {
                        <IPAddressSelector DiscoveredIPAddress="@ipaddress" OnSelectIPAddress="@OnIPAddressSelected"></IPAddressSelector>
                    }
                </td>
                <td>@networkInterface.Type</td>
            </tr>
        }
        </tbody>
    </table>
    <div>
        @SelectedIpAddress
    </div>
}

@code {

    public string SelectedIpAddress { get; set; }

    private List<NetworkInterfaceDiscoveryService.DiscoveredNetworkInterface> _networkInterfaces;

    protected override void OnInitialized()
    {
        NetworkInterfaceDiscoveryService.Start();
        _networkInterfaces = NetworkInterfaceDiscoveryService.Interfaces;
    }

    private void OnIPAddressSelected(DiscoveredIPAddress ipaddress)
    {
        SelectedIpAddress = ipaddress.Address.ToString();
        NavigationManager.NavigateTo($"networkrange/{SelectedIpAddress}");
    }

}
